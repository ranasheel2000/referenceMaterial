https://www.bogotobogo.com/GoLang/GoLang_HelloWorld.php
https://github.com/kubernetes/client-go/tree/master/examples
https://www.callicoder.com/deploy-containerized-go-app-kubernetes/

https://medium.com/programming-kubernetes/building-stuff-with-the-kubernetes-api-1-cc50a3642
https://medium.com/programming-kubernetes/building-stuff-with-the-kubernetes-api-part-4-using-go-b1d0e3c1c899

https://itnext.io/how-to-create-a-kubernetes-custom-controller-using-client-go-f36a7a7536cc
https://searchitoperations.techtarget.com/tutorial/Follow-a-Kubernetes-and-Go-tutorial-in-your-home-lab


Install GO:
===========
- downlaod golang: 
             https://golang.org/dl/
- copy downloaded golang repo to /usr/local/
- set GOROOT: 
             GOROOT is go installation directory(where go binary is present) 
             i.e. /usr/local/go/bin
         export PATH=$PATH:/usr/local/go/bin

- set GOPATH : 
             GOPATH is environment variable which specifies the location of your workspace(working directory) 
             i.e. directory where go code is stored. 
             It defaults to a directory named go inside your home directory, so $HOME/go on Unix
         export GOPATH=/usr/sheel/go 
                                    where $HOME is home directory for user "sheel".





$ mkdir $GOPATH/src/github.com/user/hello
       write program in hello.go inside hello directory.
$ build and install program : 
      go install github.com/user/hello : It will create binary hello file at same location.
      go build  github.com/user/hello  : It will create hello binary file in $GOPATH/bin/hello
      
$ run program: $GOPATH/bin/hello
               or  
               $GOPATH/src/github.com/ranasheel2000/hello   #Use github.com/{githubUserNamewhereCodeRepoIsHostedOrCloned}

GO Project code structure inside /home/sheel/go:
-----------------------------------------------
bin/
    hello                 # command executable
src/
    github.com/ranasheel2000/
        helloMain/
            hello.go      # command source
        helloUtil/
            util.go       # package source
            
Basics:            
1. Each of the .go file will contain  "package packageName"
   for ex, in hellpUtil/util.go, use 
                                 "package helloUtil"
   Same way, "import hellpUtil" will be used in callig package.
   Refer "Importing packages" for further details.
2. If we want to export some function outside of package, then that funtion name must be started with capital letter;
   else its scope will be within same package only.
   for ex, func Exported(){
   }
Importing packages:
===================
In /home/sheel/go/src/github.com/user/helloMain/hello.go

             import "github.com/user/helloUtil"         # Note: we are not using file name rather directory name.
     
