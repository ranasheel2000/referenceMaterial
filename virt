qemu-img create -f qcow2 /var/lib/libvirt/images/nfsserver2.qcow2 8G 
sudo virt-install --virt-type kvm --name master-2 --ram 16384 --vcpus=4 --graphics vnc,listen=0.0.0.0 --noautoconsole --arch x86_64 --os-type=linux --virt-type kvm --os-variant=rhel7 --cdrom=/tmp/rhcos-4.1.0-x86_64-installer.iso --disk /var/lib/libvirt/images/ma-2.qcow2,format=qcow2

sudo virt-install --virt-type kvm  --name nfsserver2  --ram 4096  --vcpus=2  --graphics vnc,listen=0.0.0.0  --noautoconsole  --arch x86_64  --os-type=linux  --virt-type kvm  --os-variant=rhel7  --location=/home/opc/CentOS-7-x86_64-DVD-1908.iso  --disk /var/lib/libvirt/images/nfsserver2.qcow2,format=qcow2

virsh list --all
virsh dumpxml xyz
virsh net-edit xyz
virsh snapshot-create xyz_snapshot --domain xyz
virsh snapshot-list --domain xyz
virsh snapshot-revert --domain xyz --snapshotname xyz_snapshot
virsh shutdown --domain xyz
virsh start xyz
virsh undefine
virsh destroy
virsh domifaddr



oc get node






CLI based kvm VM installation : 10 Steps, 10 Minutes.
==========================================================
Network Configuration: HOST Machine
==========================================================

1. Define Network Configuration
# cat sh-network.xml

<network>
  <name>sh-network</name>
  <forward mode='nat'/>
  <bridge name='virbr150' stp='on' delay='0'/>
  <dns>
    <forwarder addr='192.168.150.196'/>
  </dns>
  <ip address='192.168.150.1' netmask='255.255.255.0'>
    <dhcp>
      <range start='192.168.150.195' end='192.168.154.200'/>
    </dhcp>
  </ip>
</network>

--for 2nd network
<network>
  <name>sh-network1</name>
  <forward mode='nat'/>
  <bridge name='virbr155' stp='on' delay='0'/>
  <dns>
    <forwarder addr='192.168.155.196'/>
  </dns>
  <ip address='192.168.155.1' netmask='255.255.255.0'>
    <dhcp>
      <range start='192.168.155.195' end='192.168.155.254'/>
    </dhcp>
  </ip>
</network>


2. Create Network
# sudo virsh net-define sh-network.xml

3. Start Network
# sudo virsh net-autostart sh-network
# sudo virsh net-start sh-network

--for 2nd network
# sudo virsh net-define sh1-network.xml
# sudo virsh net-autostart sh1-network
# sudo virsh net-start sh1-network

# sudo virsh net-list --all
Name              State        Auto-start   Continuous
----------------------------------------------------------
 sh-network      Running    Yes (yes)    Yes (yes)
 sh1-network      Running    Yes (yes)    Yes (yes)

4. Create kickstart file for VMs
=======
# cat ks.cfg
autopart --type=lvm
# Partition clearing information
clearpart --none --initlabel
# Use text install
text
# Use CDROM installation media
cdrom
# Keyboard layouts
keyboard --vckeymap=us --xlayouts='us'
# System language
lang en_US.UTF-8
# Do not configure the X Window System
skipx
# System services
services --disabled="chronyd"
# System timezone
timezone Asia/Kolkata --isUtc --nontp
#Root password
#rootpw root
#Root password
rootpw root
#Initial user
user --name "sheel"  --password root
# Network information
#network  --bootproto=dhcp --device=link --ipv6=auto --activate
# DHCP
#network  --bootproto=dhcp --device=ens3 --noipv6 --activate
# STATIC
#network  --bootproto=static --device=ens3 --ip=192.168.150.196 --netmask=255.255.255.0 --nameserver=8.8.8.8 --activate --noipv6
network  --bootproto=static --device=ens3 --ip=192.168.150.196 --netmask=255.255.255.0 --nameserver=8.8.8.8 --activate
network  --hostname=worker1.domain.com
# Accept Eula
eula --agreed
# Reboot when the install is finished.
reboot
=======

5. copy kickstart file and os image to /tmp/ directory.
    # it may be any location which is accessible by qemu user.
#cp CentOS-8.2.2004-x86_64-minimal.iso /tmp/CentOS-8.2.2004-x86_64-minimal.iso
#cp ks.cfg /tmp/ks.cfg

6. launch VM
sudo virt-install --name sh-master --memory 4096 --vcpus 2  --disk size=15  --location /tmp/CentOS-8.2.2004-x86_64-minimal.iso  --os-variant rhel8.0 --network bridge=virbr150,model=virtio --graphics none  --initrd-inject /tmp/ks.cfg --extra-args="ks=file:/ks.cfg console=tty0 console=ttyS0,115200n8"

# network related information is stored in ks.cfg file.

7. Login to VM as per password specified in ks.cfg file.
master login: root
Password:
[root@master ~]#
[root@master ~]#
[root@master ~]#


8. Network tests:
[root@master ~]# ip a s
1: lo: mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
       valid_lft forever preferred_lft forever
    inet6 ::1/128 scope host
       valid_lft forever preferred_lft forever
2: ens3: mtu 1500 qdisc fq_codel state UP group default qlen 1000
    link/ether 52:54:00:5a:02:7a brd ff:ff:ff:ff:ff:ff
    inet 192.168.150.195/24 brd 192.168.154.255 scope global noprefixroute ens3
       valid_lft forever preferred_lft forever
    inet6 fe80::f269:59:f7ed:fef1/64 scope link noprefixroute
       valid_lft forever preferred_lft forever
[root@master ~]#

[root@master ~]# ip r s
192.168.150.0/24 dev ens3 proto kernel scope link src 192.168.150.195 metric 100
[root@master ~]# 
[root@master ~]# 
[root@master ~]# ping 8.8.8.8
connect: Network is unreachable
[root@master ~]#
[root@master ~]#

9. Set default route for network accessibility.
[root@master ~]# ip r a default via 192.168.150.1 dev ens3
[root@master ~]# 
[root@master ~]# 
[root@master ~]# ip r s
default via 192.168.150.1 dev ens3
192.168.150.0/24 dev ens3 proto kernel scope link src 192.168.150.195 metric 100
[root@master ~]#
[root@master ~]# 
[root@master ~]# ping 8.8.8.8
PING 8.8.8.8 (8.8.8.8) 56(84) bytes of data.
64 bytes from 8.8.8.8: icmp_seq=1 ttl=114 time=2.40 ms
64 bytes from 8.8.8.8: icmp_seq=2 ttl=114 time=2.61 ms
--- 
---
[root@master ~]#
[root@master ~]#
[root@master ~]# yum update
CentOS-8 - AppStream                            0.0  B/s |   0  B     00:00
Errors during downloading metadata for repository 'AppStream':
  - Curl error (6): Couldn't resolve host name for http://mirrorlist.centos.org/?release=8&arch=x86_64&repo=AppStream&infra=stock [Could not resolve host: mirrorlist.centos.org]
Error: Failed to download metadata for repo 'AppStream': Cannot prepare internal mirrorlist: Curl error (6): Couldn't resolve host name for http://mirrorlist.centos.org/?release=8&arch=x86_64&repo=AppStream&infra=stock [Could not resolve host: mirrorlist.centos.org]
[root@master ~]#
[root@master ~]#

10. Set nameserver (only if not specified inside ks.cfg file)
[root@master ~]# vi /etc/resolv.conf
nameserver 8.8.8.8
nameserver 8.8.4.4
[root@master ~]#






































===================================================================================================================================================


3 VMs will be up: master, worker1, worker2
- Each VM with 2 network interfaces.
- Each VMs with external network access (provided your host machine has internet access and default routes are configured on host machine)
- Each VM ping-able from each other.

*1. Define Network Configurations on Host/Base Machine.*
We will attach 2 interfaces to all of our KVM VMs:
For K8S- cluster Internal Network (Node to Node Communication)
For K8S-External Network (For internet Access)

*1st Linux network.*
```
# cat sh-network.xml
<network>
<name>sh-network</name>
<forward mode=’nat’/>
<bridge name=’virbr154' stp=’on’ delay=’0'/>
<dns>
<forwarder addr=’192.168.154.195'/>
</dns>
<ip address=’192.168.154.1' netmask=’255.255.255.0'>
<dhcp>
<range start=’192.168.154.154' end=’192.168.154.254'/>
</dhcp>
</ip>
</network>
```

*2nd Linux network.*
```
# cat sh1-network.xml
<network>
<name>sh1-network</name>
<forward mode=’nat’/>
<bridge name=’virbr155' stp=’on’ delay=’0'/>
<dns>
<forwarder addr=’192.168.155.195'/>
</dns>
<ip address=’192.168.155.1' netmask=’255.255.255.0'>
<dhcp>
<range start=’192.168.155.154' end=’192.168.155.254'/>
</dhcp>
</ip>
</network>
* I used "NAT" here for both networks for simplicity, 
- one can use "isolated" for internal network and "routed" for External Network.
```

*2. Create Networks*
```
# sudo virsh net-define sh-network.xml
# sudo virsh net-define sh1-network.xml
```

3. Start Networks*
```
# sudo virsh net-autostart sh-network
# sudo virsh net-start sh-network
# sudo virsh net-autostart sh1-network
# sudo virsh net-start sh1-network\
# sudo virsh net-list — all

```

*List Networks*:
```
# sudo virsh net-list --all
 Name                 State      Autostart     Persistent
----------------------------------------------------------
 sh-network           active     yes           yes
 sh-network1          active     yes           yes
```

4. Create kickstart files for each VM
```
$cat master1.cfg
autopart --type=lvm
# Partition clearing information
clearpart --none --initlabel
# Use text install
text
# Use CDROM installation media
cdrom
# Keyboard layouts
keyboard --vckeymap=us --xlayouts='us'
# System language
lang en_US.UTF-8
# Do not configure the X Window System
skipx
# System services
services --disabled="chronyd"
# System timezone
timezone Asia/Kolkata --isUtc --nontp
#Root password
rootpw root
#Initial user
user --name "sheel"  --password root
# Network Configuration
# For DHCP based IP assignment
#network  --bootproto=dhcp --device=ens3 --noipv6 --activate --onboot=off #or --onboot=on
# For STATIC IP assignment
#network  --bootproto=static --device=ens3 --ip=192.168.154.196 --gateway=192.168.154.1 --netmask=255.255.255.0 --nameserver=8.8.8.8 --activate --noipv6   #--noipv6/--noipv4 disables ipv6 or ipv4
#network  --hostname=sheel.domain.com
# 1st interface with default route:
# DEFROUTE is yes by default, but if gateway is not provided, 
# default route will not be created. Add --gatway for defroute on 
# this interface.
network  --bootproto=static --device=ens3 --ip=192.168.154.195 --netmask=255.255.255.0 --gateway=192.168.154.1 --nameserver=8.8.8.8 --activate
# 2nd Interface, without defroute (--nodefroute)
network  --bootproto=static --device=ens4 --ip=192.168.155.195 --netmask=255.255.255.0  --nameserver=8.8.8.8 --activate --nodefroute
#set hostname
network  --hostname=master1.sheel.com
#To add specific routes use post section
#%post
#cat > /etc/sysconfig/network-scripts/route-eth0 <<EOF
#default via 192.168.154.1 dev ens3
#EOF
# Accept Eula
eula --agreed
# Reboot when the install is finished.
reboot
# Packages to be installed during OS Installation, ex: curl.
%packages
curl
%end
# Running subscription-manager as a Post-Install Script
#%post --log=/root/ks-post.log
#/usr/sbin/subscription-manager register --username=sheel@rana.com --password=secret --serverurl=sheel-serverurl.rana.com --org="Admin Group" --environment="Dev" --servicelevel=standard --release="8.0"
#%end
For each VM , create different kickstart files.
master1.cfg
network  --bootproto=static --device=ens3 --ip=192.168.154.195 --netmask=255.255.255.0 --gateway=192.168.154.1 --nameserver=8.8.8.8 --activate
# 2nd Interface, without defroute (--nodefroute)
network  --bootproto=static --device=ens4 --ip=192.168.155.195 --netmask=255.255.255.0  --nameserver=8.8.8.8 --activate --nodefroute
#set hostname
network  --hostname=master1.sheel.com
worker1.cfg
network  --bootproto=static --device=ens3 --ip=192.168.154.196 --netmask=255.255.255.0 --gateway=192.168.154.1 --nameserver=8.8.8.8 --activate
# 2nd Interface, without defroute (--nodefroute)
network  --bootproto=static --device=ens4 --ip=192.168.155.196 --netmask=255.255.255.0  --nameserver=8.8.8.8 --activate --nodefroute
#set hostname
network  --hostname=worker1.sheel.com
worker2.cfg
network  --bootproto=static --device=ens3 --ip=192.168.154.197 --netmask=255.255.255.0 --gateway=192.168.154.1 --nameserver=8.8.8.8 --activate
# 2nd Interface, without defroute (--nodefroute)
network  --bootproto=static --device=ens4 --ip=192.168.155.197 --netmask=255.255.255.0  --nameserver=8.8.8.8 --activate --nodefroute
#set hostname
network  --hostname=worker2.sheel.com
```

5. Place kickstart file and OS image.
Copy kickstart file and OS image to /tmp/ directory.
(Any location accessible by qemu user.)

```
#cp CentOS-8.2.2004-x86_64-minimal.iso /tmp/CentOS-8.2.2004-x86_64-minimal.iso
#cp master1.cfg /tmp/master1.cfg
```

6. launch VMs

*Master VM:*
```
sudo virt-install — name sh-master1 — memory 4096 — vcpus 2 — disk size=15 — location /tmp/CentOS-8.2.2004-x86_64-minimal.iso — os-variant rhel8.0 — network bridge=virbr154,model=virtio — network bridge=virbr155,model=virtio — graphics none — initrd-inject /tmp/master1.cfg — extra-args=”ks=file:/master1.cfg console=tty0 console=ttyS0,115200n8"
```

Worker1 VM:
```
sudo virt-install — name sh-worker1 — memory 8192 — vcpus 2 — disk size=15 — location /tmp/CentOS-8.2.2004-x86_64-minimal.iso — os-variant rhel8.0 — network bridge=virbr154,model=virtio — network bridge=virbr155,model=virtio — graphics none — initrd-inject /tmp/master1.cfg — extra-args=”ks=file:/worker1.cfg console=tty0 console=ttyS0,115200n8"
```

Worker2 VM:
```
sudo virt-install — name sh-worker2 — memory 8192 — vcpus 2 — disk size=15 — location /tmp/CentOS-8.2.2004-x86_64-minimal.iso — os-variant rhel8.0 — network bridge=virbr154,model=virtio — network bridge=virbr155,model=virtio — graphics none — initrd-inject /tmp/master1.cfg — extra-args=”ks=file:/worker2.cfg console=tty0 console=ttyS0,115200n8"
```

# Refer other network related information stored in corresponding kickstart files: 
- master1.cfg
- worker1.cfg
- worker2.cfg

7. Login to VM.
check kickstart config files for respective root or user login passwords, e.g. master1.cfg.
- If you want to login in continuation of installation process:
```
master login: root
Password:
[root@master1 ~]#
```

- Otherwise just press ctrl+] after completion of installation and login using normal ssh login command:
```
# ssh root@192.168.154.195
root@192.168.155.195's password:         
                     {enter password specified in kickstart file}
#
```

*('ctrl+]' is escape character to escape out of installation prompt, pressing 'ctrl+]' during installation may stop installation.)

8. Network Confirmation:
```
[root@master1 ~]# ip a s
1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000
link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
inet 127.0.0.1/8 scope host lo
valid_lft forever preferred_lft forever
inet6 ::1/128 scope host
valid_lft forever preferred_lft forever
2: ens3: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc fq_codel state UP group default qlen 1000
link/ether 55:54:03:72:63:2a brd ff:ff:ff:ff:ff:ff
inet 192.168.154.195/24 brd 192.168.154.255 scope global noprefixroute ens3
valid_lft forever preferred_lft forever
inet6 fe80::f028:b131:74c:2804/64 scope link noprefixroute
valid_lft forever preferred_lft forever
3: ens4: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc fq_codel state UP group default qlen 1000
link/ether 59:54:08:ba:56:1a brd ff:ff:ff:ff:ff:ff
inet 192.168.155.195/24 brd 192.168.155.255 scope global noprefixroute ens4
valid_lft forever preferred_lft forever
inet6 fe80::456e:ecf6:3044:7b47/64 scope link noprefixroute
valid_lft forever preferred_lft forever
```

```
[root@master1 ~]# ip r s
default via 192.168.154.1 dev ens3 proto static metric 100
192.168.154.0/24 dev ens3 proto kernel scope link src 192.168.154.195 metric 100
192.168.155.0/24 dev ens4 proto kernel scope link src 192.168.155.195 metric 101
[root@master1 ~]#
```

```
[root@master1 ~]# cat /etc/resolv.conf
# Generated by NetworkManager
search sheel.com
nameserver 8.8.8.8
[root@master1 ~]#
```

```
[root@master1 ~]#ping 8.8.8.8
PING 8.8.8.8 (8.8.8.8) 56(84) bytes of data.
64 bytes from 8.8.8.8: icmp_seq=1 ttl=114 time=3.27 ms
— — 8.8.8.8 ping statistics — -
1 packets transmitted, 1 received, 0% packet loss, time 0ms
rtt min/avg/max/mdev = 3.274/3.274/3.274/0.000 ms
[root@master1 ~]#
```


All Set now. (wait for next post on Kubernetes setup over this VM cluster)
Enjoy!!
