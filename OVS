Open vSwitch commands:
======================
    Bridge commands:
    ================
          add-br BRIDGE               create a new bridge named BRIDGE
          add-br BRIDGE PARENT VLAN   create new fake BRIDGE in PARENT on VLAN
          del-br BRIDGE               delete BRIDGE and all of its ports
          list-br                     print the names of all the bridges
          br-exists BRIDGE            exit 2 if BRIDGE does not exist
          br-to-vlan BRIDGE           print the VLAN which BRIDGE is on
          br-to-parent BRIDGE         print the parent of BRIDGE
          br-set-external-id BRIDGE KEY VALUE  set KEY on BRIDGE to VALUE
          br-set-external-id BRIDGE KEY  unset KEY on BRIDGE
          br-get-external-id BRIDGE KEY  print value of KEY on BRIDGE
          br-get-external-id BRIDGE  list key-value pairs on BRIDGE
        
     Port commands (a bond is considered to be a single port):
     ================	
          list-ports BRIDGE           print the names of all the ports on BRIDGE
          add-port BRIDGE PORT        add network device PORT to BRIDGE
          add-bond BRIDGE PORT IFACE...  add bonded port PORT in BRIDGE from IFACES
          del-port [BRIDGE] PORT      delete PORT (which may be bonded) from BRIDGE
          port-to-br PORT             print name of bridge that contains PORT
        
     Interface commands (a bond consists of multiple interfaces):
     ================
          list-ifaces BRIDGE          print the names of all interfaces on BRIDGE
          iface-to-br IFACE           print name of bridge that contains IFACE
        
        
        
        
        

 ovs-vsctl: ovs-vswitchd management utility
 =========
	ovs-vsctl list-br
              Ex,    ovs-vsctl list-br	
                           br-ctlplane
                           br-int

        ovs-vsctl list bridge
              Ex,    ovs-vsctl list bridge
                          _uuid               : 9459c3a9-3082-422f-bf84-5a0496105f57
                          auto_attach         : []
                          controller          : [2894a5c0-e4a9-49d2-9932-606abeb35d2d]
                          datapath_id         : "0000aac359942f42"
                          datapath_type       : system
                          datapath_version    : "<unknown>"
                          external_ids        : {}
                          fail_mode           : secure
                          flood_vlans         : []
                          flow_tables         : {}
                          ipfix               : []
                          mcast_snooping_enable: false
                          mirrors             : []
                          name                : br-int
                          netflow             : []
                          other_config        : {mac-table-size="50000"}
                          ports               : [39b803c0-ca3e-41bd-a392-99a6121956e3, 42eb8e54-637d-4086-9260-427ea13f4ec9, 856a1280-0df1-48d7-84e2-f6978901ab94]
                          protocols           : ["OpenFlow10", "OpenFlow13"]
                          rstp_enable         : false
                          rstp_status         : {}
                          sflow               : []
                          status              : {}
                          stp_enable          : false
                          
                          _uuid               : 870b6e2e-4933-4de1-8b36-df71c6476dee
                          auto_attach         : []
                          controller          : [e106759c-224c-46a8-b874-4dc7143f5b9e]
                          datapath_id         : "0000a0369f3f5616"
                          datapath_type       : system
                          datapath_version    : "<unknown>"
                          external_ids        : {bridge-id=br-ctlplane}
                          fail_mode           : secure
                          flood_vlans         : []
                          flow_tables         : {}
                          ipfix               : []
                          mcast_snooping_enable: false
                          mirrors             : []
                          name                : br-ctlplane
                          netflow             : []
                          other_config        : {hwaddr="a0:36:9f:3f:56:16", mac-table-size="50000"}
                          ports               : [09f9f266-fb19-42a6-ba24-43717e6576e1, 19495c54-3f98-4937-8a2b-80b9bd01442b, 80e6bfa5-db5f-4a11-ab6a-2780e3d6bbb2]
                          protocols           : ["OpenFlow10", "OpenFlow13"]
                          rstp_enable         : false
                          rstp_status         : {}
                          sflow               : []
                          status              : {}
                          stp_enable          : false	
	ovs-vsctl add-br br1
	ovs-vsctl add-port br1 eth0
	ovs-vsctl list port
        ovs-vsctl list port br1

	ovs-vsctl list-ifaces br1 
            Ex,     ovs-vsctl list-ifaces br-ctlplane
                              p2p2
                              phy-br-ctlplane

       ovs-vsctl list interface
            Ex,     ovs-vsctl list interface br-ctlplane
                              _uuid               : aab86e93-d256-4cbf-bc77-e9649528c3b8
                              admin_state         : up
                              bfd                 : {}
                              bfd_status          : {}
                              cfm_fault           : []
                              cfm_fault_status    : []
                              cfm_flap_count      : []
                              cfm_health          : []
                              cfm_mpid            : []
                              cfm_remote_mpids    : []
                              cfm_remote_opstate  : []
                              duplex              : []
                              error               : []
                              external_ids        : {}
                              ifindex             : 12
                              ingress_policing_burst: 0
                              ingress_policing_rate: 0
                              lacp_current        : []
                              link_resets         : 1
                              link_speed          : []
                              link_state          : up
                              lldp                : {}
                              mac                 : []
                              mac_in_use          : "a0:36:9f:3f:56:16"
                              mtu                 : 1500
                              mtu_request         : []
                              name                : br-ctlplane
                              ofport              : 65534
                              ofport_request      : []
                              options             : {}
                              other_config        : {}
                              statistics          : {collisions=0, rx_bytes=2847156, rx_crc_err=0, rx_dropped=0, rx_errors=0, rx_frame_err=0, rx_over_err=0, rx_packets=53889, tx_bytes=396479040, tx_dropped=0, tx_errors=0, tx_packets=6375}
                              status              : {driver_name=openvswitch}
                              type                : internal
                              



                          
			  



sudo ovs-vsctl show
     Ex ,        sudo ovs-vsctl show
                       7c7189d3-fa7a-454c-86b3-473133d020dc
                           Manager "ptcp:6640:127.0.0.1"
                               is_connected: true
                           Bridge br-ctlplane
                               Controller "tcp:127.0.0.1:6633"
                                   is_connected: true
                               fail_mode: secure
                               Port phy-br-ctlplane
                                   Interface phy-br-ctlplane
                                       type: patch
                                       options: {peer=int-br-ctlplane}
                               Port "p2p2"
                                   Interface "p2p2"
                               Port br-ctlplane
                                   Interface br-ctlplane
                                       type: internal
                           Bridge br-int
                               Controller "tcp:127.0.0.1:6633"
                                   is_connected: true
                               fail_mode: secure
                               Port int-br-ctlplane
                                   Interface int-br-ctlplane
                                       type: patch
                                       options: {peer=phy-br-ctlplane}
                               Port br-int
                                   Interface br-int
                                       type: internal
                               Port "tap339ea8b1-24"
                                   tag: 1
                                   Interface "tap339ea8b1-24"
                                       type: internal
                           ovs_version: "2.9.0"
                       
                       



ovs-vsctl list interface | egrep 'options|name                :'

ovs-appctl: for querying and controlling Open vSwitch daemon
	logging stuff
	-V

ovs-dpctl: Open vSwitch datapath management utility
	add-dp datapath
	dump-dps
	dump-flows datapath

ovs-ofctl: OpenFlow switch management utility
	show SWITCH
	dump-flows SWITCH
	add-flow SWITCH FLOW
	mod-port SWITCH IFACE ACT (hmm?)


Creating tap ports:
===================
ip tuntap add mode tap vport1
ip tuntap add mode tap vport2
ifconfig vport1 up 
ifconfig vport2 up


Adding tap ports (vport1 & vport2) to ovs bridge:
=================================================
ovs-vsctl add-port mybridge vport1
ovs-vsctl add-port mybridge vport2

or

ovs-vsctl add-port mybridge vport1 -- add-port mybridge vport1

connect VMs to these tap ports using virtual box networkSettings:
      bridge Adapter 
 	  vport1

final diagram (after connectivity)
===================================
eth0 ---  mybridge(ovs)  
           |          |
          vport1  vport2
           eth0    eth0
		   VM1      VM2
		  
